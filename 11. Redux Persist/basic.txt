### Session Storage and Local Storage

Session storage is persistent untill we close browser(ie reload will unaffected)
Local storage is persistent untill we manually remove items from local storage

### Local Storage
window.localStorage
this.localStorage

getItem
setItem

localStorage store string only

JSON.stringify
JSON.parse

### Redux Persist

npm i redux-persist

# In Store
import { persistStore } from 'redux-persist';

const store = createStore(rootReducer, applyMiddleware(...middleware));
const persistor = persistStore(store);

export default { store, persistor };

We can also export simply both or default with both

# In Root Reducer

import { persistReducer } from 'redux-persist';
import storage from 'redux-persist/lib/storage';

const persistConfig = {
    key: 'root',
    storage,
    whitelist: ['cart'],
};
const rootReducer = combineReducers({ user: userReducer, cart: cartReducer });
export default persistReducer(persistConfig, rootReducer);

# In Index

Wrapping App with PersistGate
import { PersistGate as Persist } from 'redux-persist/integration/react';

import { store, persistor } from './redux/store';
<Persist persistor={persistor}>
    <App />
</Persist>


# Ex
import { combineReducers } from 'redux'
import { persistReducer } from 'redux-persist'
import storage from 'redux-persist/lib/storage'
 
import { authReducer, otherReducer } from './reducers'
 
const rootPersistConfig = {
  key: 'root',
  storage: storage,
  blacklist: ['auth']
}
 
const authPersistConfig = {
  key: 'auth',
  storage: storage,
  blacklist: ['somethingTemporary']
}
 
const rootReducer = combineReducers({
  auth: persistReducer(authPersistConfig, authReducer),
  other: otherReducer,
})
 
export default persistReducer(rootPersistConfig, rootReducer)