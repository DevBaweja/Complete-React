### Firebase and User Authentication

Log in using google account
Set up project
Add web app

<!-- The core Firebase JS SDK is always required and must be listed first -->
<script src="https://www.gstatic.com/firebasejs/7.15.5/firebase-app.js"></script>

<!-- TODO: Add SDKs for Firebase products that you want to use
     https://firebase.google.com/docs/web/setup#available-libraries -->
<script src="https://www.gstatic.com/firebasejs/7.15.5/firebase-analytics.js"></script>

<script>
  // Your web app's Firebase configuration
  var firebaseConfig = {
    apiKey: "AIzaSyDwhfPag5OtdUfzZqCc6BGN7tI6laWgICk",
    authDomain: "crown-clothing-3518d.firebaseapp.com",
    databaseURL: "https://crown-clothing-3518d.firebaseio.com",
    projectId: "crown-clothing-3518d",
    storageBucket: "crown-clothing-3518d.appspot.com",
    messagingSenderId: "717941750097",
    appId: "1:717941750097:web:8f5d86f9b035ac7309bb70",
    measurementId: "G-GFKZWL3M5D"
  };
  // Initialize Firebase
  firebase.initializeApp(firebaseConfig);
  firebase.analytics();
</script>

### Configuring

in src/firebase
firebase.util.js

import firebase from 'firebase/app'

// These import are util imports and will be attached to firebase object

import 'firebase/firestore';
import 'firebase/auth';

const config = {
    apiKey: 'AIzaSyDwhfPag5OtdUfzZqCc6BGN7tI6laWgICk',
    authDomain: 'crown-clothing-3518d.firebaseapp.com',
    databaseURL: 'https://crown-clothing-3518d.firebaseio.com',
    projectId: 'crown-clothing-3518d',
    storageBucket: 'crown-clothing-3518d.appspot.com',
    messagingSenderId: '717941750097',
    appId: '1:717941750097:web:8f5d86f9b035ac7309bb70',
    measurementId: 'G-GFKZWL3M5D',
};
firebase.initializeApp(config)

// As Imported auth and firestore
export const auth = firebase.auth();
export const firestore = firebase.firestore();

// Google sing-in provider
const provider = new firebase.auth.GoogleAuthProvider();
provider.setCustomParameters({ prompt: 'select_account' });
// Sign In with Popup
export const signInWithGoogle = () => auth.signInWithPopup(provider);
// in case we need whole library
export default firebase;

Now on firebase go to authentication - Set up sign-in method
And enable google


// In App.jsx
state = { currentUser: null };

unsubscribeFromAuth = null;
componentDidMount() {
    this.unsubscribeFromAuth = auth.onAuthStateChanged(user => {
        this.setState({ currentUser: user });
        console.log(user);
    });
}
componentWillUnmount()
{
    this.unsubscribeFromAuth()
}

In Header pass currentUser as props
const renderUser = () => {
    if (currentUser) {
        return (
            <div className="option" onClick={() => auth.signOut()}>
                Sign Out
            </div>
        );
    } else {
        return <Link to="sign"></Link>;
    }
};